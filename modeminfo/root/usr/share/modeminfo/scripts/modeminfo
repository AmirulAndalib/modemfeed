# (c) 2010-2016 Cezary Jackiewicz <cezary@eko.one.pl>
# (c) 2020-2022 modified by Konstantine Shevlyakov  <shevlakov@132lan.ru>
# (c) 2021 modified by Vladislav Kadulin  <spanky@yandex.ru>


RES="/usr/share/modeminfo"
GSCRIPT="$RES/scripts/3ginfo.gcom"

function get_device_info() {
	DEVPORT=$(uci -q get modeminfo.@modeminfo[0].device)
	case $DEVPORT in
                *tty*) continue ;;
                *) get_port ;;
        esac
	O=$(gcom -d $DEVPORT -s $GSCRIPT 2>/dev/null)
	IMEI=$(echo "$O" | awk -F[:] '/IMEI/ { print $2}')
	case $IMEI in
		[0-9][0-9]*) continue ;;
		*) IMEI="" ;;
	esac
}

function get_port() {
	devices="$(ls /dev/ttyUSB* /dev/ttyACM* /dev/ttyHS* 2>/dev/null | sort -r)"
		for d in $devices; do
			DEVPORT=$d gcom -s $RES/scripts/probeport.gcom > /dev/null 2>&1
			if [ $? = 0 ]; then
				uci set modeminfo.@modeminfo[0].device="$d"
				uci commit modeminfo
				break
			fi
		done
	DEVPORT=$(uci -q get modeminfo.@modeminfo[0].device)
	O=$(gcom -d $DEVPORT -s $GSCRIPT 2>/dev/null)
}
	
function modem_family() {
	DEVICE=$(echo "$O" | awk -F[:] '/DEVICE/ { print $2}')
	if (echo ${DEVICE} | grep -i que >/dev/null); then
	        FAMILY=QUECTEL
	else
	        FAMILY=GENERIC
	fi
}

# get hardware info
function get_hwinfo(){
	if [ ! -f /tmp/modemdevice ]; then
		SCRIPT=$RES/scripts/hwinfo.gcom
		O=$(gcom -d $DEVPORT -s $SCRIPT 2>/dev/null)
		FW=$(echo "$O" | awk '/Revision:/{print $2}')
		CCID=$(echo "$O" | awk -F [:] '/ICCID:/{gsub("\r","");print $2}')
		IMSI=$(echo "$O" | grep -A2 CIMI | awk 'NR ==2{gsub("\r","");print $0}')
		echo FW=\"$FW\" >/tmp/modemdevice
		echo ICCID=\"$ICCID\" >> /tmp/modemdevice
		echo IMSI=\"$IMSI\" >> /tmp/modemdevice
		echo IMEI=\"$IMEI\">> /tmp/modemdevice
		source /tmp/modemdevice
}

# get CSQ
function get_csq(){
	CSQ=$(echo "$O" | awk -F[,\ ] '/^\+CSQ/ {print $2}')
	[ "x$CSQ" = "x" ] && CSQ=-1
	if [ $CSQ -ge 0 -a $CSQ -le 31 ]; then
		CSQ_PER=$(($CSQ * 100/31))
		CSQ_COL="red"
		[ $CSQ -ge 10 ] && CSQ_COL="red"
		[ $CSQ -ge 15 ] && CSQ_COL="orange"
		[ $CSQ -ge 20 ] && CSQ_COL="green"
		CSQ_RSSI=$((2 * CSQ - 113))
	else 
		CSQ_PER="0"
		CSQ_COL="black"
	fi
}

# Get MCC or MNC 
function get_cops() {
	# COPS
	COPS_NUM=$(echo "$O" | awk -F[\"] '/^\+COPS: .,2/ {print $2}')
	if [ "x$COPS_NUM" != "x" ]; then
		COPS_MCC=${COPS_NUM:0:3}
		COPS_MNC=${COPS_NUM:3:3}
		COPS=$(awk -F[\;] '/'$COPS_NUM'/ {print $2}' $RES/mccmnc.dat)
		if [ "x$COPS" = "x" ]; then
			COPS="$COPS_MCC $COPS_MNC"
		fi
	fi
}

# Get Registration data
function get_reg_data(){
	for CREG in "+CREG" "+CGREG" "+CEREG"; do
		LAC=$(echo "$O" | awk -F[,] '/\'$CREG'/  {gsub("^A-F0-9|\"", ""); printf "%s", toupper($3)}')
		CID=$(echo "$O" | awk -F[,] '/\'$CREG'/  {gsub("^A-F0-9|\"", ""); printf "%s", toupper($4)}')
		if [ "$LAC" -a "$CID" ]; then
			break
		fi
	done
	case $LAC in
		*FFFE*|*0000*)
			CREG="+CEREG"
			LAC=$(echo "$O" | awk -F[,] '/\'$CREG'/  {gsub("^A-F0-9|\"", ""); printf "%s", toupper($3)}')
		;;
	esac
	LAC_NUM=$(printf %d 0x$LAC)
	REGST=$(echo "$O" | awk -F[,] '/\'$CREG'/ {print $2}')
	ENBx=$(echo $CID | sed -e 's/..$//')
	CELL=$(printf %d 0x${CID: -2})
	ENBID=$(printf %d 0x$ENBx)
	if [ "x$CID" != "x" ]; then
		CID_NUM=$(printf %d 0x$CID)
	fi
	if [ $(uci -q get modeminfo.@modeminfo[0].decimail) -eq 1 ]; then
                LAC=$LAC_NUM                                
                CID=$CID_NUM                    
        fi
}

# Quectel modems
function quectel_data(){
	generic_data
	if [ "$MODE" = "LTE" ]; then
		EARFCN=$(echo "$O" |awk -F[,\ ] '/^\+QENG/ {print $10}')
		RSRP=$(echo "$O" |awk -F[,\ ] '/^\+QENG/ {print $15}')
		SINR=$(echo "$O" |awk -F "[\, ]" '/\+QENG:/{print $18}')
		PCI=$(echo "$O" |awk -F "[\, ]" '/\+QENG:/{print $9}')
		CSQ_RSSI=$(echo "$O" |awk -F "[\, ]" '/\+QENG:/{print $17}')
		RSRQ=$(echo "$O" |awk -F[,\ ] '/^\+QENG/ {print $16}')
		BWUL=$(echo "$O" |awk -F[,\ ] '/^\+QENG/ {print $12}')
	      BWDL=$(echo "$O" |awk -F[,\ ] '/^\+QENG/ {print $13}')
	elif [ "$MODE" = "EDGE" ]; then
		EARFCN=$(echo "$O" |awk -F[,\ ] '/^\+QENG/ {print $10}')
	else
		EARFCN=$(echo "$O" |awk -F[,\ ] '/^\+QENG/ {print $9}')
		ECIO=$(echo "$O" |awk -F[,\ ] '/^\+QENG/ {print $13}')
		SINR=$ECIO
	fi
	CHIPTEMP=$(echo "$O" | awk -F[,\ ] '/^\+QTEMP/ {print $3}')
	# Quectel EM1X modem temp sensors
	if [ ! $(echo "$CHIPTEMP" | grep "^?[0-9]+$") ] || [ $CHIPTEMP -eq 255 ]; then
                CHIPTEMP=$(echo "$O" | awk -F[,\ ] '/^\+QTEMP/ {gsub("\"",""); print $2}')
        fi
}

function generic_data(){
	TECH=$(echo "$O" | awk -F[,] '/^\+COPS/ {print $4}')
	case "$TECH" in
		2*) MODE="UMTS";;
		0*|3*) MODE="EDGE";;
		4*) MODE="HSDPA";;
		5*) MODE="HSUPA";;
		6*) MODE="HSPA";;
		7*) MODE="LTE";;
		 *) MODE="--";;
	esac
}

function get_data_in(){
	modem_family
	case $FAMILY in
		QUECTEL)
			get_cops
			get_csq
			quectel_data
			get_reg_data
		;;
		*)
			generic_data
			get_reg_data
			get_cops
			get_csq
		;;
	esac
}
